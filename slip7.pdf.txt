slip no â€“ 7
---------------
Q1. Create an Android Application that Demonstrate Radio Button.


activity_main.xml
--------------------
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
 xmlns:tools="http://schemas.android.com/tools"
 android:layout_width="match_parent"
 android:layout_height="match_parent"
 tools:context=".MainActivity">
 <TextView
 android:id="@+id/selectedOptionTextView"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Selected Option:"
 android:layout_marginTop="20dp"/>
 <RadioGroup
 android:id="@+id/radioGroup"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:layout_below="@id/selectedOptionTextView"
 android:layout_centerHorizontal="true">
 <RadioButton
 android:id="@+id/radioButtonOption1"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Option 1"/>
 <RadioButton
 android:id="@+id/radioButtonOption2"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Option 2"/>
 <RadioButton
 android:id="@+id/radioButtonOption3"
 android:layout_width="wrap_content"
 android:layout_height="wrap_content"
 android:text="Option 3"/>
 </RadioGroup>
</RelativeLayout>
--------------------------------


MainActivity.java
------------------------
package com.example.activitylifecycle;
import android.os.Bundle;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;
public class MainActivity extends AppCompatActivity {
 private TextView selectedOptionTextView;
 private RadioGroup radioGroup;
 @Override
 protected void onCreate(Bundle savedInstanceState) {
 super.onCreate(savedInstanceState);
 setContentView(R.layout.activity_main);
 selectedOptionTextView = findViewById(R.id.selectedOptionTextView);
 radioGroup = findViewById(R.id.radioGroup);
 // Set RadioGroup OnCheckedChangeListener
 radioGroup.setOnCheckedChangeListener(new RadioGroup.OnCheckedChangeListener() 
{
 @Override
 public void onCheckedChanged(RadioGroup radioGroup, int checkedId) {
 // Find which RadioButton is checked by id
 RadioButton radioButton = findViewById(checkedId);
 // Display selected option
 selectedOptionTextView.setText("Selected Option: " + 
radioButton.getText());
 }
 });
 }
}

-----------------------------

Q2 Create an Android application to demonstrate phone call using Implicit Intent in android 


#activity_main.xml
-------------------

 <?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <Button
        android:id="@+id/btnCall"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Make a Call"
        android:layout_centerInParent="true"/>

</RelativeLayout>
----------------------------


MainActivity.java
---------------------
package com.example.myapplication;

import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import androidx.appcompat.app.AppCompatActivity;

public class MainActivity extends AppCompatActivity {

    private Button btnCall;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        btnCall = findViewById(R.id.btnCall);
        btnCall.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // Phone number to call
                String phoneNumber = "123456789";

                // Create an implicit intent with ACTION_CALL action
                Intent callIntent = new Intent(Intent.ACTION_CALL);

                // Set the data for the intent as the phone number
                callIntent.setData(Uri.parse("tel:" + phoneNumber));

                // Check if the permission is granted
                if (checkSelfPermission(android.Manifest.permission.CALL_PHONE) != android.content.pm.PackageManager.PERMISSION_GRANTED) {
                    // Request permission to make the call
                    requestPermissions(new String[]{android.Manifest.permission.CALL_PHONE}, 1);
                } else {
                    // Start the call
                    startActivity(callIntent);
                }
            }
        });
    }
}

---------------------------

AndroidManifest.xml
----------------------
<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-permission android:name="android.permission.CALL_PHONE"/>


    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.MyApplication"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>